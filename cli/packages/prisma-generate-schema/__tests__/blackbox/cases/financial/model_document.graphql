type User {
  id: ID! @id
  person: Person! @relation(link: INLINE)
}

type Person {
  id: ID! @id
  email: String
  firstName: String
  lastName: String
  phoneNumbers: [PhoneNumber] @relation(link: INLINE)
  scheduledTransactions: [FinancialScheduledTransaction] @relation(link: INLINE)
  transactions: [FinancialTransaction] @relation(link: INLINE)
  user: User
}

type PhoneNumber {
  id: ID! @id
  number: String!
}

type FinancialAccount {
  id: ID! @id
  key: String @unique
  campuses: [Campus] @relation(link: INLINE)
  description: String!
  isActive: Boolean!
  name: String
}

enum CREDIT_CARD {
  VISA
  MASTERCARD
  AMEX
  DISCOVER
}

enum CURRENCY_TYPE {
  ACH
  CC
}

enum ACH_TYPE {
  SAVINGS
  CHECKING
}

type FinancialPaymentDetail {
  id: ID! @id
  accountNumberMasked: String!
  billingLocation: Location @relation(link: INLINE)
  creditCardType: CREDIT_CARD
  achType: ACH_TYPE
  currencyType: CURRENCY_TYPE
  expirationDate: DateTime!
  nameOnCard: String
}

enum TRANSACTION_FREQUENCY {
  DAILY
  MONTHLY
  BIWEEKLY
  CUSTOM
}

type FinancialScheduledTransaction {
  id: ID! @id
  person: Person
  endDate: DateTime
  payment: FinancialPaymentDetail @relation(link: INLINE)
  isActive: Boolean!
  startDate: DateTime
  frequency: TRANSACTION_FREQUENCY
  transactions: [FinancialTransaction]
  account: FinancialAccount @relation(link: INLINE)
  amount: Float!
}

enum TRANSACTION_STATUS {
  PENDING
  SUCCESS
  FAILED
}

type FinancialTransaction {
  id: ID! @id
  payment: FinancialPaymentDetail @relation(link: INLINE)
  person: Person
  processedDate: DateTime
  scheduledTransaction: FinancialScheduledTransaction @relation(link: INLINE)
  status: TRANSACTION_STATUS!
  transactionDate: DateTime
  amount: Float!
  account: FinancialAccount @relation(link: INLINE)
  organization: Group! @relation(link: INLINE)
}

enum GROUP_INVITE_STATUS {
  PENDING
  JOINED
}

enum GROUP_ROLE_TYPE {
  ADMIN
  OWNER
  MEMBER
}

type GroupInvite {
  id: ID! @id
  email: String!
  group: Group! @relation(link: INLINE)
  groupRole: GroupRole @relation(link: INLINE)
  status: GROUP_INVITE_STATUS!
}

type GroupMember {
  id: ID! @id
  group: Group
  role: GroupRole @relation(link: INLINE)
  person: Person @relation(link: INLINE)
}

type GroupRole {
  id: ID! @id
  canEdit: Boolean!
  canView: Boolean!
  description: String!
  groupType: GroupType @relation(link: INLINE)
  isLeader: Boolean
  name: String! @unique
  type: GROUP_ROLE_TYPE
}

type GroupType {
  id: ID! @id
  description: String
  groups: [Group]
  name: String! @unique
  roles: [GroupRole]
}

type Group {
  id: ID! @id
  key: String @unique
  description: String
  type: GroupType! @relation(link: INLINE)
  invites: [GroupInvite]
  isActive: Boolean!
  members: [GroupMember] @relation(link: INLINE)
  name: String!
  organization: Group @relation(link: INLINE)
}

type Campus {
  id: ID! @id
  accounts: [FinancialAccount]
  description: String
  isActive: Boolean
  organization: Group @relation(link: INLINE)
  location: Location @relation(link: INLINE)
  name: String!
  phoneNumbers: [PhoneNumber] @relation(link: INLINE)
}

enum LOCATION_TYPE {
  HOME
  WORK
}

type Location {
  id: ID! @id
  city: String
  locationType: LOCATION_TYPE
  postalCode: String
  state: String
  street1: String
  street2: String
}